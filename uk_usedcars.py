# -*- coding: utf-8 -*-
"""UK_usedCars.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FyZdiz8gwWPQKLE00GEXpF8clzUdfQ3T
"""

from google.colab import files
files.upload()

import pandas as pd
import seaborn as sns
import numpy as np

df = pd.read_csv('./cars_dataset.csv')

# Create two new columns for average price and average mpg for each model
df['avgPrice'] = df.groupby('model')['price'].transform('mean').round(2)
df['avgMpg'] = df.groupby('model')['mpg'].transform('mean').round(1)
df

# pairplot of the dataframe, colored by Make
sns.pairplot(df, hue = 'Make')

# barplot representing Make vs price
sns.barplot(x = 'Make', y = 'price', data = df)

# lmplot of year vs price, separated by Make and colored by transmission type
sns.lmplot(x = 'year', y = 'price', data = df, col = 'Make', hue = 'transmission', truncate = False, height = 5, col_wrap = 2)

# Flatter regression lines indicate more stable resale value of the car the older it is, whereas steeper slopes indicate higher loss in value the older the car.

# lmplot of mileage vs price, separated by Make
sns.lmplot(x = 'mileage', y = 'price', data = df, col = 'Make', hue = 'Make', truncate = False, col_wrap = 2, height = 5, aspect = 0.75)

# The flatter the regression line, the more value a car will hold despite higher mileage.

# lmplot of avgPrice (of each model) vs avgMpg (of each model)
sns.lmplot(data = df, x = 'avgPrice', y = 'avgMpg', hue = 'Make', truncate = False)

# Negative regression shows average mpg goes down as the average price goes up.